<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android menu 使用]]></title>
      <url>/2017/03/01/Android%20menu%20%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="Android-menu-使用"><a href="#Android-menu-使用" class="headerlink" title="Android menu 使用"></a>Android menu 使用</h2><h4 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h4><h4 id="创建菜单项"><a href="#创建菜单项" class="headerlink" title="创建菜单项"></a>创建菜单项</h4><p><img src="/source/img/menu_path.png" alt="img"><br><img src="/source/img/menu_item.png" alt="img"></p>
<p>1.在res文件夹下创建menu文件夹,用与存放xml文件,然后在menu 文件夹中创建menu.xml文件,编写menu文件<br>    2.menu.xml , 一个item就表示一个菜单项,每一个item 必不可少的就是id(唯一标识服)和title(item 名称)</p>
<h4 id="重写onCreateOptionsMenu-Menu-menu-创建菜单"><a href="#重写onCreateOptionsMenu-Menu-menu-创建菜单" class="headerlink" title="重写onCreateOptionsMenu(Menu menu) 创建菜单"></a>重写onCreateOptionsMenu(Menu menu) 创建菜单</h4><p><img src="/source/img/createOptionsMenu.png" alt="img"></p>
<p>1.使用getMenuInflater() 获取MenuInflater 对象,通过inflate(@MenuRes int menuRes, Menu menu)就可以创建菜单了,inflate接受两个参数,第一个参数标识我们通过那个资源文件来创建文件,第二个参数表示我们常见出来的菜单项将添加到哪个menu对象上.</p>
<h4 id="重写onOptionsitemSelected-MenuItem-item-实现菜单项的点击事件"><a href="#重写onOptionsitemSelected-MenuItem-item-实现菜单项的点击事件" class="headerlink" title="重写onOptionsitemSelected(MenuItem item) 实现菜单项的点击事件"></a>重写onOptionsitemSelected(MenuItem item) 实现菜单项的点击事件</h4><p><img src="/source/img/OptionsItemSelected.png" alt="img"></p>
<p>通过item.getItemId()即可获取到item项的资源ID,通过对比资源ID,即可进行后续操作</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android menu 使用]]></title>
      <url>/2017/03/01/menu%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="Android-menu-使用"><a href="#Android-menu-使用" class="headerlink" title="Android menu 使用"></a>Android menu 使用</h2><p>####使用步骤</p>
<h4 id="创建菜单项"><a href="#创建菜单项" class="headerlink" title="创建菜单项"></a>创建菜单项</h4><p><img src="./menu_path.png" alt="Alt text"></p>
<p><img src="./menu_item.png" alt="Alt text"></p>
<p>1.在res文件夹下创建menu文件夹,用与存放xml文件,然后在menu 文件夹中创建menu.xml文件,编写menu文件<br>    2.menu.xml , 一个item就表示一个菜单项,每一个item 必不可少的就是id(唯一标识服)和title(item 名称)</p>
<h4 id="重写onCreateOptionsMenu-Menu-menu-创建菜单"><a href="#重写onCreateOptionsMenu-Menu-menu-创建菜单" class="headerlink" title="重写onCreateOptionsMenu(Menu menu) 创建菜单"></a>重写onCreateOptionsMenu(Menu menu) 创建菜单</h4><p><img src="./createOptionsMenu.png" alt="Alt text"></p>
<p>1.使用getMenuInflater() 获取MenuInflater 对象,通过inflate(@MenuRes int menuRes, Menu menu)就可以创建菜单了,inflate接受两个参数,第一个参数标识我们通过那个资源文件来创建文件,第二个参数表示我们常见出来的菜单项将添加到哪个menu对象上.</p>
<h4 id="重写onOptionsitemSelected-MenuItem-item-实现菜单项的点击事件"><a href="#重写onOptionsitemSelected-MenuItem-item-实现菜单项的点击事件" class="headerlink" title="重写onOptionsitemSelected(MenuItem item) 实现菜单项的点击事件"></a>重写onOptionsitemSelected(MenuItem item) 实现菜单项的点击事件</h4><p><img src="./OptionsItemSelected.png" alt="Alt text"></p>
<p>通过item.getItemId()即可获取到item项的资源ID,通过对比资源ID,即可进行后续操作</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android开发常用工具类]]></title>
      <url>/2017/02/25/%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      <content type="html"><![CDATA[<h2 id="PwdCheckUtil"><a href="#PwdCheckUtil" class="headerlink" title="PwdCheckUtil"></a>PwdCheckUtil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PwdCheckUtil</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 规则1：至少包含大小写字母及数字中的一种</div><div class="line">     * 是否包含</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLetterOrDigit</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> isLetterOrDigit = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含字母或数字</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="keyword">if</span> (Character.isLetterOrDigit(str.charAt(i))) &#123;   <span class="comment">//用char包装类中的判断数字的方法判断每一个字符</span></div><div class="line">                isLetterOrDigit = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String regex = <span class="string">"^[a-zA-Z0-9]+$"</span>;</div><div class="line">        <span class="keyword">boolean</span> isRight = isLetterOrDigit &amp;&amp; str.matches(regex);</div><div class="line">        <span class="keyword">return</span> isRight;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 规则2：至少包含大小写字母及数字中的两种</div><div class="line">     * 是否包含</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLetterDigit</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> isDigit = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含数字</span></div><div class="line">        <span class="keyword">boolean</span> isLetter = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含字母</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="keyword">if</span> (Character.isDigit(str.charAt(i))) &#123;   <span class="comment">//用char包装类中的判断数字的方法判断每一个字符</span></div><div class="line">                isDigit = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isLetter(str.charAt(i))) &#123;  <span class="comment">//用char包装类中的判断字母的方法判断每一个字符</span></div><div class="line">                isLetter = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String regex = <span class="string">"^[a-zA-Z0-9]+$"</span>;</div><div class="line">        <span class="keyword">return</span>  isDigit &amp;&amp; isLetter &amp;&amp; str.matches(regex);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 规则3：必须同时包含大小写字母及数字</div><div class="line">     * 是否包含</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isContainAll</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> isDigit = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含数字</span></div><div class="line">        <span class="keyword">boolean</span> isLowerCase = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含字母</span></div><div class="line">        <span class="keyword">boolean</span> isUpperCase = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="keyword">if</span> (Character.isDigit(str.charAt(i))) &#123;   <span class="comment">//用char包装类中的判断数字的方法判断每一个字符</span></div><div class="line">                isDigit = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isLowerCase(str.charAt(i))) &#123;  <span class="comment">//用char包装类中的判断字母的方法判断每一个字符</span></div><div class="line">                isLowerCase = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isUpperCase(str.charAt(i))) &#123;</div><div class="line">                isUpperCase = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String regex = <span class="string">"^[a-zA-Z0-9]+$"</span>;</div><div class="line">        <span class="keyword">boolean</span> isRight = isDigit &amp;&amp; isLowerCase &amp;&amp; isUpperCase &amp;&amp; str.matches(regex);</div><div class="line">        <span class="keyword">return</span> isRight;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     *   判断EditText输入的数字、中文还是字母方法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">whatIsInput</span><span class="params">(Context context, EditText edInput)</span> </span>&#123;</div><div class="line">        String txt = edInput.getText().toString();</div><div class="line"></div><div class="line">        Pattern p = Pattern.compile(<span class="string">"[0-9]*"</span>);</div><div class="line">        Matcher m = p.matcher(txt);</div><div class="line">        <span class="keyword">if</span> (m.matches()) &#123;</div><div class="line">            Toast.makeText(context, <span class="string">"输入的是数字"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">        p = Pattern.compile(<span class="string">"[a-zA-Z]"</span>);</div><div class="line">        m = p.matcher(txt);</div><div class="line">        <span class="keyword">if</span> (m.matches()) &#123;</div><div class="line">            Toast.makeText(context, <span class="string">"输入的是字母"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">        p = Pattern.compile(<span class="string">"[\u4e00-\u9fa5]"</span>);</div><div class="line">        m = p.matcher(txt);</div><div class="line">        <span class="keyword">if</span> (m.matches()) &#123;</div><div class="line">            Toast.makeText(context, <span class="string">"输入的是汉字"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="MobileUtil"><a href="#MobileUtil" class="headerlink" title="MobileUtil"></a>MobileUtil</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div></pre></td><td class="code"><pre><div class="line">public class MobileUtil &#123;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * Print telephone info.</div><div class="line">     */</div><div class="line">    public static String printMobileInfo(Context context) &#123;</div><div class="line">        Date date = new Date(System.currentTimeMillis());</div><div class="line">        SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</div><div class="line">        String time = dateFormat.format(date);</div><div class="line">        StringBuilder sb = new StringBuilder();</div><div class="line">        sb.append(&quot;系统时间：&quot;).append(time).append(&quot;\n&quot;);</div><div class="line">        TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">        String IMSI = tm.getSubscriberId();</div><div class="line">        //IMSI前面三位460是国家号码，其次的两位是运营商代号，00、02是中国移动，01是联通，03是电信。</div><div class="line">        String providerName = null;</div><div class="line">        if (IMSI != null) &#123;</div><div class="line">            if (IMSI.startsWith(&quot;46000&quot;) || IMSI.startsWith(&quot;46002&quot;)) &#123;</div><div class="line">                providerName = &quot;中国移动&quot;;</div><div class="line">            &#125; else if (IMSI.startsWith(&quot;46001&quot;)) &#123;</div><div class="line">                providerName = &quot;中国联通&quot;;</div><div class="line">            &#125; else if (IMSI.startsWith(&quot;46003&quot;)) &#123;</div><div class="line">                providerName = &quot;中国电信&quot;;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        sb.append(providerName).append(&quot;\n&quot;).append(getNativePhoneNumber(context)).append(&quot;\n网络模式：&quot;).append(getNetType(context)).append(&quot;\nIMSI是：&quot;).append(IMSI);</div><div class="line">        sb.append(&quot;\nDeviceID(IMEI)       :&quot;).append(tm.getDeviceId());</div><div class="line">        sb.append(&quot;\nDeviceSoftwareVersion:&quot;).append(tm.getDeviceSoftwareVersion());</div><div class="line">        sb.append(&quot;\ngetLine1Number       :&quot;).append(tm.getLine1Number());</div><div class="line">        sb.append(&quot;\nNetworkCountryIso    :&quot;).append(tm.getNetworkCountryIso());</div><div class="line">        sb.append(&quot;\nNetworkOperator      :&quot;).append(tm.getNetworkOperator());</div><div class="line">        sb.append(&quot;\nNetworkOperatorName  :&quot;).append(tm.getNetworkOperatorName());</div><div class="line">        sb.append(&quot;\nNetworkType          :&quot;).append(tm.getNetworkType());</div><div class="line">        sb.append(&quot;\nPhoneType            :&quot;).append(tm.getPhoneType());</div><div class="line">        sb.append(&quot;\nSimCountryIso        :&quot;).append(tm.getSimCountryIso());</div><div class="line">        sb.append(&quot;\nSimOperator          :&quot;).append(tm.getSimOperator());</div><div class="line">        sb.append(&quot;\nSimOperatorName      :&quot;).append(tm.getSimOperatorName());</div><div class="line">        sb.append(&quot;\nSimSerialNumber      :&quot;).append(tm.getSimSerialNumber());</div><div class="line">        sb.append(&quot;\ngetSimState          :&quot;).append(tm.getSimState());</div><div class="line">        sb.append(&quot;\nSubscriberId         :&quot;).append(tm.getSubscriberId());</div><div class="line">        sb.append(&quot;\nVoiceMailNumber      :&quot;).append(tm.getVoiceMailNumber());</div><div class="line"></div><div class="line">        return sb.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 打印系统信息</div><div class="line">     *</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static String printSystemInfo() &#123;</div><div class="line">        Date date = new Date(System.currentTimeMillis());</div><div class="line">        SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</div><div class="line">        String time = dateFormat.format(date);</div><div class="line">        StringBuilder sb = new StringBuilder();</div><div class="line">        sb.append(&quot;_______  系统信息  &quot;).append(time).append(&quot; ______________&quot;);</div><div class="line">        sb.append(&quot;\nID                 :&quot;).append(Build.ID);</div><div class="line">        sb.append(&quot;\nBRAND              :&quot;).append(Build.BRAND);</div><div class="line">        sb.append(&quot;\nMODEL              :&quot;).append(Build.MODEL);</div><div class="line">        sb.append(&quot;\nRELEASE            :&quot;).append(Build.VERSION.RELEASE);</div><div class="line">        sb.append(&quot;\nSDK                :&quot;).append(Build.VERSION.SDK);</div><div class="line"></div><div class="line">        sb.append(&quot;\n_______ OTHER _______&quot;);</div><div class="line">        sb.append(&quot;\nBOARD              :&quot;).append(Build.BOARD);</div><div class="line">        sb.append(&quot;\nPRODUCT            :&quot;).append(Build.PRODUCT);</div><div class="line">        sb.append(&quot;\nDEVICE             :&quot;).append(Build.DEVICE);</div><div class="line">        sb.append(&quot;\nFINGERPRINT        :&quot;).append(Build.FINGERPRINT);</div><div class="line">        sb.append(&quot;\nHOST               :&quot;).append(Build.HOST);</div><div class="line">        sb.append(&quot;\nTAGS               :&quot;).append(Build.TAGS);</div><div class="line">        sb.append(&quot;\nTYPE               :&quot;).append(Build.TYPE);</div><div class="line">        sb.append(&quot;\nTIME               :&quot;).append(Build.TIME);</div><div class="line">        sb.append(&quot;\nINCREMENTAL        :&quot;).append(Build.VERSION.INCREMENTAL);</div><div class="line"></div><div class="line">        sb.append(&quot;\n_______ CUPCAKE-3 _______&quot;);</div><div class="line">        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.CUPCAKE) &#123;</div><div class="line">            sb.append(&quot;\nDISPLAY            :&quot;).append(Build.DISPLAY);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        sb.append(&quot;\n_______ DONUT-4 _______&quot;);</div><div class="line">        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.DONUT) &#123;</div><div class="line">            sb.append(&quot;\nSDK_INT            :&quot;).append(Build.VERSION.SDK_INT);</div><div class="line">            sb.append(&quot;\nMANUFACTURER       :&quot;).append(Build.MANUFACTURER);</div><div class="line">            sb.append(&quot;\nBOOTLOADER         :&quot;).append(Build.BOOTLOADER);</div><div class="line">            sb.append(&quot;\nCPU_ABI            :&quot;).append(Build.CPU_ABI);</div><div class="line">            sb.append(&quot;\nCPU_ABI2           :&quot;).append(Build.CPU_ABI2);</div><div class="line">            sb.append(&quot;\nHARDWARE           :&quot;).append(Build.HARDWARE);</div><div class="line">            sb.append(&quot;\nUNKNOWN            :&quot;).append(Build.UNKNOWN);</div><div class="line">            sb.append(&quot;\nCODENAME           :&quot;).append(Build.VERSION.CODENAME);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        sb.append(&quot;\n_______ GINGERBREAD-9 _______&quot;);</div><div class="line">        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.GINGERBREAD) &#123;</div><div class="line">            sb.append(&quot;\nSERIAL             :&quot;).append(Build.SERIAL);</div><div class="line">        &#125;</div><div class="line">        return sb.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /****</div><div class="line">     * 获取网络类型</div><div class="line">     *</div><div class="line">     * @param context</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static String getNetType(Context context) &#123;</div><div class="line">        try &#123;</div><div class="line">            ConnectivityManager connectMgr = (ConnectivityManager) context</div><div class="line">                    .getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class="line">            NetworkInfo info = connectMgr.getActiveNetworkInfo();</div><div class="line">            if (info == null) &#123;</div><div class="line">                return &quot;&quot;;</div><div class="line">            &#125;</div><div class="line">            if (info.getType() == ConnectivityManager.TYPE_WIFI) &#123;</div><div class="line">                return &quot;WIFI&quot;;</div><div class="line">            &#125; else if (info.getType() == ConnectivityManager.TYPE_MOBILE) &#123;</div><div class="line">                if (info.getSubtype() == TelephonyManager.NETWORK_TYPE_CDMA) &#123;</div><div class="line">                    return &quot;CDMA&quot;;</div><div class="line">                &#125; else if (info.getSubtype() == TelephonyManager.NETWORK_TYPE_EDGE) &#123;</div><div class="line">                    return &quot;EDGE&quot;;</div><div class="line">                &#125; else if (info.getSubtype() == TelephonyManager.NETWORK_TYPE_EVDO_0) &#123;</div><div class="line">                    return &quot;EVDO0&quot;;</div><div class="line">                &#125; else if (info.getSubtype() == TelephonyManager.NETWORK_TYPE_EVDO_A) &#123;</div><div class="line">                    return &quot;EVDOA&quot;;</div><div class="line">                &#125; else if (info.getSubtype() == TelephonyManager.NETWORK_TYPE_GPRS) &#123;</div><div class="line">                    return &quot;GPRS&quot;;</div><div class="line">                &#125;</div><div class="line">                /*</div><div class="line">                 * else if(info.getSubtype() ==</div><div class="line">                 * TelephonyManager.NETWORK_TYPE_HSDPA)&#123; return &quot;HSDPA&quot;; &#125;else</div><div class="line">                 * if(info.getSubtype() == TelephonyManager.NETWORK_TYPE_HSPA)&#123;</div><div class="line">                 * return &quot;HSPA&quot;; &#125;else if(info.getSubtype() ==</div><div class="line">                 * TelephonyManager.NETWORK_TYPE_HSUPA)&#123; return &quot;HSUPA&quot;; &#125;</div><div class="line">                 */</div><div class="line">                else if (info.getSubtype() == TelephonyManager.NETWORK_TYPE_UMTS) &#123;</div><div class="line">                    return &quot;UMTS&quot;;</div><div class="line">                &#125; else &#123;</div><div class="line">                    return &quot;3G&quot;;</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                return &quot;&quot;;</div><div class="line">            &#125;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            return &quot;&quot;;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取当前设置的电话号码</div><div class="line">     */</div><div class="line">    public static String getNativePhoneNumber(Context context) &#123;</div><div class="line">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class="line">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">        String NativePhoneNumber = null;</div><div class="line">        NativePhoneNumber = telephonyManager.getLine1Number();</div><div class="line">        return String.format(&quot;手机号: %s&quot;, NativePhoneNumber);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * IMSI是国际移动用户识别码的简称(International Mobile Subscriber Identity)</div><div class="line">     * IMSI共有15位，其结构如下：</div><div class="line">     * MCC+MNC+MIN</div><div class="line">     * MCC：Mobile Country Code，移动国家码，共3位，中国为460;</div><div class="line">     * MNC:Mobile NetworkCode，移动网络码，共2位</div><div class="line">     * 在中国，移动的代码为电00和02，联通的代码为01，电信的代码为03</div><div class="line">     * 合起来就是（也是Android手机中APN配置文件中的代码）：</div><div class="line">     * 中国移动：46000 46002</div><div class="line">     * 中国联通：46001</div><div class="line">     * 中国电信：46003</div><div class="line">     * 举例，一个典型的IMSI号码为460030912121001</div><div class="line">     */</div><div class="line">    public static String getIMSI(Context context) &#123;</div><div class="line">        TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">        String IMSI = telephonyManager.getSubscriberId();</div><div class="line">        return IMSI;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * IMEI是International Mobile Equipment Identity （国际移动设备标识）的简称</div><div class="line">     * IMEI由15位数字组成的”电子串号”，它与每台手机一一对应，而且该码是全世界唯一的</div><div class="line">     * 其组成为：</div><div class="line">     * 1. 前6位数(TAC)是”型号核准号码”，一般代表机型</div><div class="line">     * 2. 接着的2位数(FAC)是”最后装配号”，一般代表产地</div><div class="line">     * 3. 之后的6位数(SNR)是”串号”，一般代表生产顺序号</div><div class="line">     * 4. 最后1位数(SP)通常是”0″，为检验码，目前暂备用</div><div class="line">     */</div><div class="line">    public static String getIMEI(Context context) &#123;</div><div class="line">        TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">        String IMEI = telephonyManager.getDeviceId();</div><div class="line">        return IMEI;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /////_________________ 双卡双待系统IMEI和IMSI方案（see more on http://benson37.iteye.com/blog/1923946）</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 双卡双待神机IMSI、IMSI、PhoneType信息</div><div class="line">     * &lt;uses-permission android:name=&quot;android.permission.READ_PHONE_STATE&quot;/&gt;</div><div class="line">     */</div><div class="line">    public static class TeleInfo &#123;</div><div class="line">        public String imsi_1;</div><div class="line">        public String imsi_2;</div><div class="line">        public String imei_1;</div><div class="line">        public String imei_2;</div><div class="line">        public int phoneType_1;</div><div class="line">        public int phoneType_2;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public String toString() &#123;</div><div class="line">            return &quot;TeleInfo&#123;&quot; +</div><div class="line">                    &quot;imsi_1=&apos;&quot; + imsi_1 + &apos;\&apos;&apos; +</div><div class="line">                    &quot;, imsi_2=&apos;&quot; + imsi_2 + &apos;\&apos;&apos; +</div><div class="line">                    &quot;, imei_1=&apos;&quot; + imei_1 + &apos;\&apos;&apos; +</div><div class="line">                    &quot;, imei_2=&apos;&quot; + imei_2 + &apos;\&apos;&apos; +</div><div class="line">                    &quot;, phoneType_1=&quot; + phoneType_1 +</div><div class="line">                    &quot;, phoneType_2=&quot; + phoneType_2 +</div><div class="line">                    &apos;&#125;&apos;;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * MTK Phone.</div><div class="line">     * &lt;p&gt;</div><div class="line">     * 获取 MTK 神机的双卡 IMSI、IMSI 信息</div><div class="line">     */</div><div class="line">    public static TeleInfo getMtkTeleInfo(Context context) &#123;</div><div class="line">        TeleInfo teleInfo = new TeleInfo();</div><div class="line">        try &#123;</div><div class="line">            Class&lt;?&gt; phone = Class.forName(&quot;com.android.internal.telephony.Phone&quot;);</div><div class="line"></div><div class="line">            Field fields1 = phone.getField(&quot;GEMINI_SIM_1&quot;);</div><div class="line">            fields1.setAccessible(true);</div><div class="line">            int simId_1 = (Integer) fields1.get(null);</div><div class="line"></div><div class="line">            Field fields2 = phone.getField(&quot;GEMINI_SIM_2&quot;);</div><div class="line">            fields2.setAccessible(true);</div><div class="line">            int simId_2 = (Integer) fields2.get(null);</div><div class="line"></div><div class="line">            TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">            Method getSubscriberIdGemini = TelephonyManager.class.getDeclaredMethod(&quot;getSubscriberIdGemini&quot;, int.class);</div><div class="line">            String imsi_1 = (String) getSubscriberIdGemini.invoke(tm, simId_1);</div><div class="line">            String imsi_2 = (String) getSubscriberIdGemini.invoke(tm, simId_2);</div><div class="line">            teleInfo.imsi_1 = imsi_1;</div><div class="line">            teleInfo.imsi_2 = imsi_2;</div><div class="line"></div><div class="line">            Method getDeviceIdGemini = TelephonyManager.class.getDeclaredMethod(&quot;getDeviceIdGemini&quot;, int.class);</div><div class="line">            String imei_1 = (String) getDeviceIdGemini.invoke(tm, simId_1);</div><div class="line">            String imei_2 = (String) getDeviceIdGemini.invoke(tm, simId_2);</div><div class="line"></div><div class="line">            teleInfo.imei_1 = imei_1;</div><div class="line">            teleInfo.imei_2 = imei_2;</div><div class="line"></div><div class="line">            Method getPhoneTypeGemini = TelephonyManager.class.getDeclaredMethod(&quot;getPhoneTypeGemini&quot;, int.class);</div><div class="line">            int phoneType_1 = (Integer) getPhoneTypeGemini.invoke(tm, simId_1);</div><div class="line">            int phoneType_2 = (Integer) getPhoneTypeGemini.invoke(tm, simId_2);</div><div class="line">            teleInfo.phoneType_1 = phoneType_1;</div><div class="line">            teleInfo.phoneType_2 = phoneType_2;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return teleInfo;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * MTK Phone.</div><div class="line">     * &lt;p&gt;</div><div class="line">     * 获取 MTK 神机的双卡 IMSI、IMSI 信息</div><div class="line">     */</div><div class="line">    public static TeleInfo getMtkTeleInfo2(Context context) &#123;</div><div class="line">        TeleInfo teleInfo = new TeleInfo();</div><div class="line">        try &#123;</div><div class="line">            TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">            Class&lt;?&gt; phone = Class.forName(&quot;com.android.internal.telephony.Phone&quot;);</div><div class="line">            Field fields1 = phone.getField(&quot;GEMINI_SIM_1&quot;);</div><div class="line">            fields1.setAccessible(true);</div><div class="line">            int simId_1 = (Integer) fields1.get(null);</div><div class="line">            Field fields2 = phone.getField(&quot;GEMINI_SIM_2&quot;);</div><div class="line">            fields2.setAccessible(true);</div><div class="line">            int simId_2 = (Integer) fields2.get(null);</div><div class="line"></div><div class="line">            Method getDefault = TelephonyManager.class.getMethod(&quot;getDefault&quot;, int.class);</div><div class="line">            TelephonyManager tm1 = (TelephonyManager) getDefault.invoke(tm, simId_1);</div><div class="line">            TelephonyManager tm2 = (TelephonyManager) getDefault.invoke(tm, simId_2);</div><div class="line"></div><div class="line">            String imsi_1 = tm1.getSubscriberId();</div><div class="line">            String imsi_2 = tm2.getSubscriberId();</div><div class="line">            teleInfo.imsi_1 = imsi_1;</div><div class="line">            teleInfo.imsi_2 = imsi_2;</div><div class="line"></div><div class="line">            String imei_1 = tm1.getDeviceId();</div><div class="line">            String imei_2 = tm2.getDeviceId();</div><div class="line">            teleInfo.imei_1 = imei_1;</div><div class="line">            teleInfo.imei_2 = imei_2;</div><div class="line"></div><div class="line">            int phoneType_1 = tm1.getPhoneType();</div><div class="line">            int phoneType_2 = tm2.getPhoneType();</div><div class="line">            teleInfo.phoneType_1 = phoneType_1;</div><div class="line">            teleInfo.phoneType_2 = phoneType_2;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return teleInfo;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * Qualcomm Phone.</div><div class="line">     * 获取 高通 神机的双卡 IMSI、IMSI 信息</div><div class="line">     */</div><div class="line">    public static TeleInfo getQualcommTeleInfo(Context context) &#123;</div><div class="line">        TeleInfo teleInfo = new TeleInfo();</div><div class="line">        try &#123;</div><div class="line">            TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">            Class&lt;?&gt; simTMclass = Class.forName(&quot;android.telephony.MSimTelephonyManager&quot;);</div><div class="line">            // Object sim = context.getSystemService(&quot;phone_msim&quot;);</div><div class="line">            Object sim = context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">            int simId_1 = 0;</div><div class="line">            int simId_2 = 1;</div><div class="line"></div><div class="line">            Method getSubscriberId = simTMclass.getMethod(&quot;getSubscriberId&quot;, int.class);</div><div class="line">            String imsi_1 = (String) getSubscriberId.invoke(sim, simId_1);</div><div class="line">            String imsi_2 = (String) getSubscriberId.invoke(sim, simId_2);</div><div class="line">            teleInfo.imsi_1 = imsi_1;</div><div class="line">            teleInfo.imsi_2 = imsi_2;</div><div class="line"></div><div class="line">            Method getDeviceId = simTMclass.getMethod(&quot;getDeviceId&quot;, int.class);</div><div class="line">            String imei_1 = (String) getDeviceId.invoke(sim, simId_1);</div><div class="line">            String imei_2 = (String) getDeviceId.invoke(sim, simId_2);</div><div class="line">            teleInfo.imei_1 = imei_1;</div><div class="line">            teleInfo.imei_2 = imei_2;</div><div class="line"></div><div class="line">            Method getDataState = simTMclass.getMethod(&quot;getDataState&quot;);</div><div class="line">            int phoneType_1 = tm.getDataState();</div><div class="line">            int phoneType_2 = (Integer) getDataState.invoke(sim);</div><div class="line">            teleInfo.phoneType_1 = phoneType_1;</div><div class="line">            teleInfo.phoneType_2 = phoneType_2;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return teleInfo;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * Spreadtrum Phone.</div><div class="line">     * &lt;p&gt;</div><div class="line">     * 获取 展讯 神机的双卡 IMSI、IMSI 信息</div><div class="line">     */</div><div class="line">    public static TeleInfo getSpreadtrumTeleInfo(Context context) &#123;</div><div class="line">        TeleInfo teleInfo = new TeleInfo();</div><div class="line">        try &#123;</div><div class="line"></div><div class="line">            TelephonyManager tm1 = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">            String imsi_1 = tm1.getSubscriberId();</div><div class="line">            String imei_1 = tm1.getDeviceId();</div><div class="line">            int phoneType_1 = tm1.getPhoneType();</div><div class="line">            teleInfo.imsi_1 = imsi_1;</div><div class="line">            teleInfo.imei_1 = imei_1;</div><div class="line">            teleInfo.phoneType_1 = phoneType_1;</div><div class="line"></div><div class="line">            Class&lt;?&gt; phoneFactory = Class.forName(&quot;com.android.internal.telephony.PhoneFactory&quot;);</div><div class="line">            Method getServiceName = phoneFactory.getMethod(&quot;getServiceName&quot;, String.class, int.class);</div><div class="line">            getServiceName.setAccessible(true);</div><div class="line">            TelephonyManager tm2 = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);</div><div class="line">            String imsi_2 = tm2.getSubscriberId();</div><div class="line">            String imei_2 = tm2.getDeviceId();</div><div class="line">            int phoneType_2 = tm2.getPhoneType();</div><div class="line">            teleInfo.imsi_2 = imsi_2;</div><div class="line">            teleInfo.imei_2 = imei_2;</div><div class="line">            teleInfo.phoneType_2 = phoneType_2;</div><div class="line"></div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return teleInfo;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取 MAC 地址</div><div class="line">     * &lt;uses-permission android:name=&quot;android.permission.ACCESS_WIFI_STATE&quot;/&gt;</div><div class="line">     */</div><div class="line">    public static String getMacAddress(Context context) &#123;</div><div class="line">        //wifi mac地址</div><div class="line">        WifiManager wifi = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);</div><div class="line">        WifiInfo info = wifi.getConnectionInfo();</div><div class="line">        String mac = info.getMacAddress();</div><div class="line"></div><div class="line">        return mac;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取 开机时间</div><div class="line">     */</div><div class="line">    public static String getBootTimeString() &#123;</div><div class="line">        long ut = SystemClock.elapsedRealtime() / 1000;</div><div class="line">        int h = (int) ((ut / 3600));</div><div class="line">        int m = (int) ((ut / 60) % 60);</div><div class="line"></div><div class="line">        return h + &quot;:&quot; + m;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MaterialDesignLibrary (在2.2以上的设备使用MaterialDesign)]]></title>
      <url>/2017/02/20/MaterialDesign%20Library%20(%E5%9C%A82.2%E4%BB%A5%E4%B8%8A%E7%9A%84%E8%AE%BE%E5%A4%87%E4%BD%BF%E7%94%A8MaterialDesign)%20/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>从android 5.0出现的MaterialDesign的设计风格 ,一直是android开发界的设计风向标,从 Google paly ,Google+ 等app就可看出来Google对其的重视可以应用程度,也不知道为什么没有在国内流行起来.</li>
<li>在之前要想在自己的app上使用MaterialDesign风格的各种控件 无奈只能在5.0以上的设备实现,自从出现了MaterialDesignLibrary 现在也可以在2.2的设备上使用了            </li>
<li><a href="https://github.com/navasmdc/MaterialDesignLibrary" target="_blank" rel="external">项目地址</a></li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li><p>添加依赖</p>
<pre><code>compile &apos;com.github.navasmdc:MaterialDesign:1.5@aar&apos;
</code></pre></li>
<li><p>MaterialDesign Library  包含了众多的控件,下面挑选几个常用的</p>
</li>
</ul>
<ul>
<li>Button       实现了水波纹效果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">&lt;com.gc.materialdesign.views.ButtonFlat        透明背景的button,background属性修改的是Button的Text的Color</div><div class="line">               android:id=&quot;@+id/buttonflat&quot;</div><div class="line">               android:layout_width=&quot;wrap_content&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot;</div><div class="line">               android:text=&quot;Button&quot; /&gt;</div><div class="line"></div><div class="line">   &lt;com.gc.materialdesign.views.ButtonRectangle       这里的background属性修改的才是Button的background</div><div class="line">               android:id=&quot;@+id/button&quot;</div><div class="line">               android:layout_width=&quot;wrap_content&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot;</div><div class="line">               android:text=&quot;Button&quot; /&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Progress</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;com.gc.materialdesign.views.ProgressBarCircularIndeterminate     实现5.0的圆形ProgressBar效果</div><div class="line">               android:id=&quot;@+id/progressBarCircularIndeterminate&quot;</div><div class="line">               android:layout_width=&quot;32dp&quot;</div><div class="line">               android:layout_height=&quot;32dp&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot; /&gt;</div><div class="line"></div><div class="line">   &lt;com.gc.materialdesign.views.ProgressBarIndeterminate      实现5.0的水平ProgressBar效果</div><div class="line">               android:id=&quot;@+id/progressBarIndeterminate&quot;</div><div class="line">               android:layout_width=&quot;fill_parent&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot; /&gt;</div><div class="line"></div><div class="line">   &lt;com.gc.materialdesign.views.ProgressBarIndeterminateDeterminate    实现5.0的水平ProgressBar效果</div><div class="line">               android:id=&quot;@+id/progressBarIndeterminateDeterminate&quot;</div><div class="line">               android:layout_width=&quot;fill_parent&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot; /&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Slider </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;com.gc.materialdesign.views.Slider      普通的Slider</div><div class="line">            android:id=&quot;@+id/slider&quot;</div><div class="line">            android:layout_width=&quot;fill_parent&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:background=&quot;#1E88E5&quot;</div><div class="line">            materialdesign:max=&quot;50&quot;</div><div class="line">            materialdesign:min=&quot;0&quot;</div><div class="line">             /&gt;</div><div class="line"></div><div class="line">&lt;com.gc.materialdesign.views.Slider   拖动带指示当前进度的Slider</div><div class="line">            android:id=&quot;@+id/slider&quot;</div><div class="line">            android:layout_width=&quot;fill_parent&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:background=&quot;#1E88E5&quot;</div><div class="line">            materialdesign:max=&quot;50&quot;</div><div class="line">            materialdesign:min=&quot;0&quot;</div><div class="line">            materialdesign:showNumberIndicator=&quot;true&quot;/&gt;</div></pre></td></tr></table></figure>
<ul>
<li>SnackBar</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">SnackBar snackbar = new SnackBar(Activity activity, String text, String buttonText, View.OnClickListener onClickListener);</div><div class="line">snackbar.show();</div></pre></td></tr></table></figure>
<ul>
<li>Dialog</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">Dialog dialog = new Dialog(Context context,String title, String message);</div><div class="line">dialog.show();</div></pre></td></tr></table></figure>
<ul>
<li>Color selector</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">      </div><div class="line">ColorSelector colorSelector = new ColorSelector(Context context,int intialColor, OnColorSelectedListener onColorSelectedListener);</div><div class="line">   colorSelector.show();</div></pre></td></tr></table></figure>
<ul>
<li>如果出现 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">     </div><div class="line">java.lang.IllegalArgumentException: width and height must be &gt; 0 </div><div class="line">   可以通过添加    compile&apos;com.nineoldandroids:library:2.4.0&apos; 来解决</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客简单搭建]]></title>
      <url>/2017/02/10/Hexo%E5%8D%9A%E5%AE%A2%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h2 id="一-需要准备"><a href="#一-需要准备" class="headerlink" title="一      需要准备"></a>一      需要准备</h2><p>Github账号,并且创建repository<br><a href="https://git-scm.com" target="_blank" rel="external">Git</a><br><a href="https://nodejs.org/en" target="_blank" rel="external">Node.js</a></p>
<p>Git和Node.js都是默认安装就可以</p>
<h2 id="二-操作步骤"><a href="#二-操作步骤" class="headerlink" title="二    操作步骤"></a>二    操作步骤</h2><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><ul>
<li>通过 ssh-keygen -t rsa -C “你的github邮箱” 生成秘钥.</li>
<li>在你的github的settings中找到SSH and GPG keys ,选择New SSH key,</li>
<li>把生成的is_rsa.pub文件中的全部内容拷贝到key中.</li>
</ul>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><h5 id="1-选择任意文件夹作为你自己的博客文件夹-并在该目录下右键选择-Git-Bash-开始输入命令"><a href="#1-选择任意文件夹作为你自己的博客文件夹-并在该目录下右键选择-Git-Bash-开始输入命令" class="headerlink" title="1 选择任意文件夹作为你自己的博客文件夹,并在该目录下右键选择 Git Bash ,开始输入命令"></a>1 选择任意文件夹作为你自己的博客文件夹,并在该目录下右键选择 Git Bash ,开始输入命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli             //安装hexo</div><div class="line">hexo init                           //初始化,再次操作后会生成一系列文件和文件夹</div><div class="line">hexo g                              //生成本地的静态文件</div><div class="line">hexo s                              //开启本地服务,现在就可以使用http://localhost:4000  在你本机预览界面</div></pre></td></tr></table></figure>
<h5 id="2-博客内容同步到Github-命令行安装跟部署相关的hexo插件"><a href="#2-博客内容同步到Github-命令行安装跟部署相关的hexo插件" class="headerlink" title="2 博客内容同步到Github,命令行安装跟部署相关的hexo插件"></a>2 博客内容同步到Github,命令行安装跟部署相关的hexo插件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-server --save					//创建</div><div class="line">npm install hexo-deployer-git --save				//安装自动部署发布工具</div></pre></td></tr></table></figure>
<h5 id="3-编辑Hexo的配置文件-config-yml"><a href="#3-编辑Hexo的配置文件-config-yml" class="headerlink" title="3 编辑Hexo的配置文件:_config.yml"></a>3 编辑Hexo的配置文件:_config.yml</h5><pre><code>使用主题,依然还是命令行,选择主题可以到https://hexo.io/themes/挑选,将选择好的主题下载解压之后,存放到
    themes文件夹中,在你的博客文件夹中找到_config.yml文件,修改主题  theme: 主题名称 (中间要有空格)

修改发布地址,在_config.yml找到deploy节点,修改以下几个参数
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">type: git </div><div class="line">repo: git@github.com:你的Github_UserName/你的Github_UserName.github.io.git (这里是ssh的地址,不是https的)</div><div class="line">branch: master</div></pre></td></tr></table></figure>
<h5 id="4-重新部署-并提交"><a href="#4-重新部署-并提交" class="headerlink" title="4 重新部署,并提交"></a>4 重新部署,并提交</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean                        	 //先清除掉已经生成的旧文件</div><div class="line">hexo generate                    	 //再生成一次静态文件</div><div class="line">hexo server                      	 //在本地预览下</div><div class="line">hexo deploy                       	 //本地没问题之后，Ctrl + C 停掉本地预览，使用部署命令部署到 Github上</div></pre></td></tr></table></figure>
<p>当出现 <strong>INFO deploy done: git</strong>  就说明已经发布到Github上了,现在就可以到你的Github查看效果了</p>
]]></content>
    </entry>
    
  
  
</search>
