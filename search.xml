<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android开发常用工具类]]></title>
      <url>/2017/02/25/%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      <content type="html"><![CDATA[<p>##PwdCheckUtil</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PwdCheckUtil</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 规则1：至少包含大小写字母及数字中的一种</div><div class="line">     * 是否包含</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLetterOrDigit</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> isLetterOrDigit = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含字母或数字</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="keyword">if</span> (Character.isLetterOrDigit(str.charAt(i))) &#123;   <span class="comment">//用char包装类中的判断数字的方法判断每一个字符</span></div><div class="line">                isLetterOrDigit = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String regex = <span class="string">"^[a-zA-Z0-9]+$"</span>;</div><div class="line">        <span class="keyword">boolean</span> isRight = isLetterOrDigit &amp;&amp; str.matches(regex);</div><div class="line">        <span class="keyword">return</span> isRight;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 规则2：至少包含大小写字母及数字中的两种</div><div class="line">     * 是否包含</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLetterDigit</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> isDigit = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含数字</span></div><div class="line">        <span class="keyword">boolean</span> isLetter = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含字母</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="keyword">if</span> (Character.isDigit(str.charAt(i))) &#123;   <span class="comment">//用char包装类中的判断数字的方法判断每一个字符</span></div><div class="line">                isDigit = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isLetter(str.charAt(i))) &#123;  <span class="comment">//用char包装类中的判断字母的方法判断每一个字符</span></div><div class="line">                isLetter = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String regex = <span class="string">"^[a-zA-Z0-9]+$"</span>;</div><div class="line">        <span class="keyword">return</span>  isDigit &amp;&amp; isLetter &amp;&amp; str.matches(regex);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 规则3：必须同时包含大小写字母及数字</div><div class="line">     * 是否包含</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isContainAll</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> isDigit = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含数字</span></div><div class="line">        <span class="keyword">boolean</span> isLowerCase = <span class="keyword">false</span>;<span class="comment">//定义一个boolean值，用来表示是否包含字母</span></div><div class="line">        <span class="keyword">boolean</span> isUpperCase = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="keyword">if</span> (Character.isDigit(str.charAt(i))) &#123;   <span class="comment">//用char包装类中的判断数字的方法判断每一个字符</span></div><div class="line">                isDigit = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isLowerCase(str.charAt(i))) &#123;  <span class="comment">//用char包装类中的判断字母的方法判断每一个字符</span></div><div class="line">                isLowerCase = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isUpperCase(str.charAt(i))) &#123;</div><div class="line">                isUpperCase = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String regex = <span class="string">"^[a-zA-Z0-9]+$"</span>;</div><div class="line">        <span class="keyword">boolean</span> isRight = isDigit &amp;&amp; isLowerCase &amp;&amp; isUpperCase &amp;&amp; str.matches(regex);</div><div class="line">        <span class="keyword">return</span> isRight;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     *   判断EditText输入的数字、中文还是字母方法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">whatIsInput</span><span class="params">(Context context, EditText edInput)</span> </span>&#123;</div><div class="line">        String txt = edInput.getText().toString();</div><div class="line"></div><div class="line">        Pattern p = Pattern.compile(<span class="string">"[0-9]*"</span>);</div><div class="line">        Matcher m = p.matcher(txt);</div><div class="line">        <span class="keyword">if</span> (m.matches()) &#123;</div><div class="line">            Toast.makeText(context, <span class="string">"输入的是数字"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">        p = Pattern.compile(<span class="string">"[a-zA-Z]"</span>);</div><div class="line">        m = p.matcher(txt);</div><div class="line">        <span class="keyword">if</span> (m.matches()) &#123;</div><div class="line">            Toast.makeText(context, <span class="string">"输入的是字母"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">        p = Pattern.compile(<span class="string">"[\u4e00-\u9fa5]"</span>);</div><div class="line">        m = p.matcher(txt);</div><div class="line">        <span class="keyword">if</span> (m.matches()) &#123;</div><div class="line">            Toast.makeText(context, <span class="string">"输入的是汉字"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MaterialDesignLibrary (在2.2以上的设备使用MaterialDesign)]]></title>
      <url>/2017/02/20/MaterialDesign%20Library%20(%E5%9C%A82.2%E4%BB%A5%E4%B8%8A%E7%9A%84%E8%AE%BE%E5%A4%87%E4%BD%BF%E7%94%A8MaterialDesign)%20/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>从android 5.0出现的MaterialDesign的设计风格 ,一直是android开发界的设计风向标,从 Google paly ,Google+ 等app就可看出来Google对其的重视可以应用程度,也不知道为什么没有在国内流行起来.</li>
<li>在之前要想在自己的app上使用MaterialDesign风格的各种控件 无奈只能在5.0以上的设备实现,自从出现了MaterialDesignLibrary 现在也可以在2.2的设备上使用了            </li>
<li><a href="https://github.com/navasmdc/MaterialDesignLibrary" target="_blank" rel="external">项目地址</a></li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li><p>添加依赖</p>
<pre><code>compile &apos;com.github.navasmdc:MaterialDesign:1.5@aar&apos;
</code></pre></li>
<li><p>MaterialDesign Library  包含了众多的控件,下面挑选几个常用的</p>
</li>
</ul>
<ul>
<li>Button       实现了水波纹效果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">&lt;com.gc.materialdesign.views.ButtonFlat        透明背景的button,background属性修改的是Button的Text的Color</div><div class="line">               android:id=&quot;@+id/buttonflat&quot;</div><div class="line">               android:layout_width=&quot;wrap_content&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot;</div><div class="line">               android:text=&quot;Button&quot; /&gt;</div><div class="line"></div><div class="line">   &lt;com.gc.materialdesign.views.ButtonRectangle       这里的background属性修改的才是Button的background</div><div class="line">               android:id=&quot;@+id/button&quot;</div><div class="line">               android:layout_width=&quot;wrap_content&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot;</div><div class="line">               android:text=&quot;Button&quot; /&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Progress</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;com.gc.materialdesign.views.ProgressBarCircularIndeterminate     实现5.0的圆形ProgressBar效果</div><div class="line">               android:id=&quot;@+id/progressBarCircularIndeterminate&quot;</div><div class="line">               android:layout_width=&quot;32dp&quot;</div><div class="line">               android:layout_height=&quot;32dp&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot; /&gt;</div><div class="line"></div><div class="line">   &lt;com.gc.materialdesign.views.ProgressBarIndeterminate      实现5.0的水平ProgressBar效果</div><div class="line">               android:id=&quot;@+id/progressBarIndeterminate&quot;</div><div class="line">               android:layout_width=&quot;fill_parent&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot; /&gt;</div><div class="line"></div><div class="line">   &lt;com.gc.materialdesign.views.ProgressBarIndeterminateDeterminate    实现5.0的水平ProgressBar效果</div><div class="line">               android:id=&quot;@+id/progressBarIndeterminateDeterminate&quot;</div><div class="line">               android:layout_width=&quot;fill_parent&quot;</div><div class="line">               android:layout_height=&quot;wrap_content&quot;</div><div class="line">               android:background=&quot;#1E88E5&quot; /&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Slider </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;com.gc.materialdesign.views.Slider      普通的Slider</div><div class="line">            android:id=&quot;@+id/slider&quot;</div><div class="line">            android:layout_width=&quot;fill_parent&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:background=&quot;#1E88E5&quot;</div><div class="line">            materialdesign:max=&quot;50&quot;</div><div class="line">            materialdesign:min=&quot;0&quot;</div><div class="line">             /&gt;</div><div class="line"></div><div class="line">&lt;com.gc.materialdesign.views.Slider   拖动带指示当前进度的Slider</div><div class="line">            android:id=&quot;@+id/slider&quot;</div><div class="line">            android:layout_width=&quot;fill_parent&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:background=&quot;#1E88E5&quot;</div><div class="line">            materialdesign:max=&quot;50&quot;</div><div class="line">            materialdesign:min=&quot;0&quot;</div><div class="line">            materialdesign:showNumberIndicator=&quot;true&quot;/&gt;</div></pre></td></tr></table></figure>
<ul>
<li>SnackBar</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">SnackBar snackbar = new SnackBar(Activity activity, String text, String buttonText, View.OnClickListener onClickListener);</div><div class="line">snackbar.show();</div></pre></td></tr></table></figure>
<ul>
<li>Dialog</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">Dialog dialog = new Dialog(Context context,String title, String message);</div><div class="line">dialog.show();</div></pre></td></tr></table></figure>
<ul>
<li>Color selector</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">      </div><div class="line">ColorSelector colorSelector = new ColorSelector(Context context,int intialColor, OnColorSelectedListener onColorSelectedListener);</div><div class="line">   colorSelector.show();</div></pre></td></tr></table></figure>
<ul>
<li>如果出现 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">     </div><div class="line">java.lang.IllegalArgumentException: width and height must be &gt; 0 </div><div class="line">   可以通过添加    compile&apos;com.nineoldandroids:library:2.4.0&apos; 来解决</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客简单搭建]]></title>
      <url>/2017/02/10/Hexo%E5%8D%9A%E5%AE%A2%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h2 id="一-需要准备"><a href="#一-需要准备" class="headerlink" title="一      需要准备"></a>一      需要准备</h2><p>Github账号,并且创建repository<br><a href="https://git-scm.com" target="_blank" rel="external">Git</a><br><a href="https://nodejs.org/en" target="_blank" rel="external">Node.js</a></p>
<p>Git和Node.js都是默认安装就可以</p>
<h2 id="二-操作步骤"><a href="#二-操作步骤" class="headerlink" title="二    操作步骤"></a>二    操作步骤</h2><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><ul>
<li>通过 ssh-keygen -t rsa -C “你的github邮箱” 生成秘钥.</li>
<li>在你的github的settings中找到SSH and GPG keys ,选择New SSH key,</li>
<li>把生成的is_rsa.pub文件中的全部内容拷贝到key中.</li>
</ul>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><h5 id="1-选择任意文件夹作为你自己的博客文件夹-并在该目录下右键选择-Git-Bash-开始输入命令"><a href="#1-选择任意文件夹作为你自己的博客文件夹-并在该目录下右键选择-Git-Bash-开始输入命令" class="headerlink" title="1 选择任意文件夹作为你自己的博客文件夹,并在该目录下右键选择 Git Bash ,开始输入命令"></a>1 选择任意文件夹作为你自己的博客文件夹,并在该目录下右键选择 Git Bash ,开始输入命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli             //安装hexo</div><div class="line">hexo init                           //初始化,再次操作后会生成一系列文件和文件夹</div><div class="line">hexo g                              //生成本地的静态文件</div><div class="line">hexo s                              //开启本地服务,现在就可以使用http://localhost:4000  在你本机预览界面</div></pre></td></tr></table></figure>
<h5 id="2-博客内容同步到Github-命令行安装跟部署相关的hexo插件"><a href="#2-博客内容同步到Github-命令行安装跟部署相关的hexo插件" class="headerlink" title="2 博客内容同步到Github,命令行安装跟部署相关的hexo插件"></a>2 博客内容同步到Github,命令行安装跟部署相关的hexo插件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-server --save					//创建</div><div class="line">npm install hexo-deployer-git --save				//安装自动部署发布工具</div></pre></td></tr></table></figure>
<h5 id="3-编辑Hexo的配置文件-config-yml"><a href="#3-编辑Hexo的配置文件-config-yml" class="headerlink" title="3 编辑Hexo的配置文件:_config.yml"></a>3 编辑Hexo的配置文件:_config.yml</h5><pre><code>使用主题,依然还是命令行,选择主题可以到https://hexo.io/themes/挑选,将选择好的主题下载解压之后,存放到
    themes文件夹中,在你的博客文件夹中找到_config.yml文件,修改主题  theme: 主题名称 (中间要有空格)

修改发布地址,在_config.yml找到deploy节点,修改以下几个参数
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">type: git </div><div class="line">repo: git@github.com:你的Github_UserName/你的Github_UserName.github.io.git (这里是ssh的地址,不是https的)</div><div class="line">branch: master</div></pre></td></tr></table></figure>
<h5 id="4-重新部署-并提交"><a href="#4-重新部署-并提交" class="headerlink" title="4 重新部署,并提交"></a>4 重新部署,并提交</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean                        	 //先清除掉已经生成的旧文件</div><div class="line">hexo generate                    	 //再生成一次静态文件</div><div class="line">hexo server                      	 //在本地预览下</div><div class="line">hexo deploy                       	 //本地没问题之后，Ctrl + C 停掉本地预览，使用部署命令部署到 Github上</div></pre></td></tr></table></figure>
<p>当出现 <strong>INFO deploy done: git</strong>  就说明已经发布到Github上了,现在就可以到你的Github查看效果了</p>
]]></content>
    </entry>
    
  
  
</search>
